{"ast":null,"code":"import axios from 'axios';\n/* eslint-disable */\nconst state = {\n  access_token: null,\n  refresh_token: null,\n  isAuthenticated: false,\n  signInError: null,\n  username: null,\n  userId: null,\n  userRole: null,\n  folders: {}\n};\nconst mutations = {\n  signInToken(state, userData) {\n    state.access_token = userData.access_token;\n    state.refresh_token = userData.refresh_token;\n    state.signInError = null;\n    state.username = userData.username;\n    state.userId = userData.userId;\n  },\n  logOut(state) {\n    // console.log('mutation Log Out')\n    state.access_token = null;\n    state.refresh_token = null;\n    state.username = null;\n    state.userId = null;\n  },\n  insertUser(state, userData) {\n    // console.log('mutation insert User')\n    state.access_token = userData.accessToken;\n    state.refresh_token = userData.refreshToken;\n    state.username = userData.username;\n    state.userId = userData.userId;\n    //state.userRole = userData.userRole          \n  },\n  signInError(state) {\n    //console.log('mutation sign up Error') \n    state.signInError = 'Username or passwort are wrong';\n  },\n  foldersData(state, foldersData) {\n    // console.log(\"auth.js -> mutations -> foldersData\") \n    state.folders = foldersData;\n  }\n};\nconst actions = {\n  async signIn({\n    commit\n  }, user) {\n    // { dispatch}\n    //console.log('action signIn')\n    const form = {\n      \"email\": user.email,\n      \"password\": user.password\n    };\n    try {\n      let response = await axios.post('/api/v1/auth/login', form, {\n        headers: {\n          skipAuthorization: true // Custom flag to skip the Authorization header\n        }\n      });\n      if (response.status == 200) {\n        const userData = {\n          \"access_token\": response.data.accessToken,\n          \"refresh_token\": response.data.refreshToken,\n          \"username\": response.data.username,\n          \"userId\": response.data.userId\n        };\n        localStorage.setItem(\"access_token\", response.data.accessToken);\n        localStorage.setItem(\"refresh_token\", response.data.refreshToken);\n        localStorage.setItem(\"username\", response.data.username);\n        localStorage.setItem(\"userId\", response.data.userId);\n        commit('signInToken', userData);\n      }\n    } catch (error) {\n      //console.log('signIn in index.js catched an error')\n      console.log('Error during signIn:', error);\n      commit('signInError');\n    }\n  },\n  logOut({\n    commit\n  }) {\n    commit('logOut');\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('userId');\n  },\n  // create | insert a new User\n  async insertUser({\n    commit\n  }, user) {\n    // { dispatch, commit }          \n\n    const form = {\n      \"name\": user.name,\n      \"email\": user.email,\n      \"username\": user.username,\n      \"password\": user.password\n    };\n    let response = await axios.post('/api/v1/auth/register', form, {\n      headers: {\n        skipAuthorization: true // Custom flag to skip the Authorization header\n      }\n    }).catch(error => {\n      console.error('Error during registration:', error);\n    });\n    if (response.status == 200) {\n      localStorage.setItem(\"access_token\", response.data.accessToken);\n      localStorage.setItem(\"refresh_token\", response.data.refreshToken);\n      localStorage.setItem(\"username\", response.data.username);\n      localStorage.setItem(\"userId\", response.data.userId);\n      const userData = {\n        \"accessToken\": response.data.accessToken,\n        \"refreshToken\": response.data.refreshToken,\n        \"username\": response.data.username,\n        \"userId\": response.data.userId\n        //\"userRole\": response.data.userRole,\n      };\n      commit('insertUser', userData);\n    }\n  },\n  async allFoldersData({\n    commit\n  }, foldersData) {\n    //console.log(\"auth.js -> actions -> allFoldersData\") \n    commit('foldersData', foldersData);\n  }\n};\nconst getters = {\n  authenticated(state) {\n    let isTokenExist = !!state.access_token;\n    state.isAuthenticated = isTokenExist;\n    return state.isAuthenticated;\n  },\n  newUser(state) {\n    let newUser = {\n      \"access_token\": state.access_token,\n      \"refresh_token\": state.refresh_token\n    };\n    return state.newUser;\n  },\n  access_token(state) {\n    return state.access_token;\n  },\n  refresh_token(state) {\n    return state.refresh_token;\n  },\n  signInError(state) {\n    return state.signInError;\n  },\n  username(state) {\n    return state.username;\n  },\n  userId(state) {\n    return state.userId;\n  },\n  folders(state) {\n    return state.folders;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","access_token","refresh_token","isAuthenticated","signInError","username","userId","userRole","folders","mutations","signInToken","userData","logOut","insertUser","accessToken","refreshToken","foldersData","actions","signIn","commit","user","form","email","password","response","post","headers","skipAuthorization","status","data","localStorage","setItem","error","console","log","removeItem","name","catch","allFoldersData","getters","authenticated","isTokenExist","newUser","namespaced"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/store/auth.js"],"sourcesContent":["import axios from 'axios'\n/* eslint-disable */ \nconst state = {\n    access_token: null, \n    refresh_token: null,\n    isAuthenticated: false,\n    signInError: null,\n    username: null,\n    userId: null,\n    userRole: null,\n    folders: {}\n  };\n  \nconst mutations = {\n    signInToken (state, userData) {\n        state.access_token = userData.access_token\n        state.refresh_token = userData.refresh_token\n        state.signInError = null\n        state.username = userData.username   \n        state.userId = userData.userId         \n    },\n    logOut (state) {\n            // console.log('mutation Log Out')\n            state.access_token = null\n            state.refresh_token = null\n            state.username = null\n            state.userId = null\n    },\n    insertUser (state, userData) {\n            // console.log('mutation insert User')\n            state.access_token = userData.accessToken\n            state.refresh_token = userData.refreshToken\n            state.username = userData.username\n            state.userId = userData.userId \n            //state.userRole = userData.userRole          \n    },\n    signInError(state) {\n            //console.log('mutation sign up Error') \n            state.signInError = 'Username or passwort are wrong'\n    },\n    foldersData(state, foldersData) {\n            // console.log(\"auth.js -> mutations -> foldersData\") \n            state.folders = foldersData \n    }\n};\n  \nconst actions = {\n    async signIn ({ commit }, user) {  // { dispatch}\n        //console.log('action signIn')\n          const form = {\n            \"email\": user.email,\n            \"password\": user.password\n          }\n          try{           \n              let response = await axios.post('/api/v1/auth/login', form, {\n                headers: {\n                  skipAuthorization: true  // Custom flag to skip the Authorization header\n                }\n              })\n\n              if (response.status == 200) { \n\n                const userData = {\n                  \"access_token\": response.data.accessToken,\n                  \"refresh_token\": response.data.refreshToken,\n                  \"username\": response.data.username,\n                  \"userId\": response.data.userId,\n                }\n                localStorage.setItem(\"access_token\", response.data.accessToken)\n                localStorage.setItem(\"refresh_token\", response.data.refreshToken)\n                localStorage.setItem(\"username\", response.data.username)\n                localStorage.setItem(\"userId\", response.data.userId)   \n                commit('signInToken', userData)\n              } \n          } catch(error) {\n              //console.log('signIn in index.js catched an error')\n              console.log('Error during signIn:', error)\n              commit('signInError')\n          }\n    },\n\n    logOut({ commit }) {\n          commit('logOut')\n          localStorage.removeItem('access_token')\n          localStorage.removeItem('refresh_token')\n          localStorage.removeItem('username')\n          localStorage.removeItem('userId')\n    },\n\n    // create | insert a new User\n    async insertUser ({ commit }, user) {  // { dispatch, commit }          \n\n            const form = {\n                \"name\": user.name,\n                \"email\": user.email,\n                \"username\": user.username,\n                \"password\": user.password,\n            }\n            \n            let response = await axios.post('/api/v1/auth/register', form, {\n                headers: {\n                    skipAuthorization: true  // Custom flag to skip the Authorization header\n                }\n                })\n                .catch(error => {\n                console.error('Error during registration:', error);\n                    })           \n\n            if (response.status == 200) {           \n                localStorage.setItem(\"access_token\", response.data.accessToken)\n                localStorage.setItem(\"refresh_token\", response.data.refreshToken)\n                localStorage.setItem(\"username\", response.data.username) \n                localStorage.setItem(\"userId\", response.data.userId)  \n                \n                const userData = {\n                    \"accessToken\": response.data.accessToken,\n                    \"refreshToken\": response.data.refreshToken,\n                    \"username\": response.data.username,\n                    \"userId\": response.data.userId,\n                    //\"userRole\": response.data.userRole,\n                }\n                commit('insertUser', userData)\n            }\n\n    },\n\n    async allFoldersData ({ commit }, foldersData) {\n            //console.log(\"auth.js -> actions -> allFoldersData\") \n            commit('foldersData', foldersData)\n    },\n};\n\nconst getters = {\n    authenticated (state){\n        let isTokenExist = !!state.access_token\n        state.isAuthenticated = isTokenExist\n        return state.isAuthenticated\n    }, \n    newUser (state) {\n        let newUser = {\n          \"access_token\": state.access_token, \n          \"refresh_token\": state.refresh_token,                      \n        }\n        return  state.newUser\n    },\n    access_token (state) {\n        return state.access_token\n    },\n    refresh_token(state) {\n        return state.refresh_token\n    },\n    signInError(state){\n        return state.signInError\n    },\n    username(state){\n        return state.username\n    },\n    userId(state){\n        return state.userId\n    },\n    folders(state){\n        return state.folders\n    }\n};\n  \nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters,\n};\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}