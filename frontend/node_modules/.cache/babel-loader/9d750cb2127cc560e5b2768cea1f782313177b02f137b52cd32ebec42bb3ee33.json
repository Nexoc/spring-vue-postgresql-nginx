{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n//<img src=\"@/assets/logo.png\" alt=\"\">\nimport { mapGetters } from \"vuex\";\nexport default {\n  namespaced: true,\n  name: 'folder',\n  data() {\n    return {\n      title: '',\n      contentsToShow: {},\n      showUpdateField: false,\n      showContentsField: false,\n      errors: {\n        title: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters({\n      authenticated: 'auth/authenticated',\n      username: 'auth/username',\n      userId: 'auth/userId',\n      folders: 'auth/folders',\n      userRole: 'auth/userRole',\n      requestStatus: 'folder/requestStatus',\n      folderId: 'folder/folderId',\n      folderTitle: 'folder/title',\n      contents: \"folder/contents\",\n      toBeUpdated: 'content/toBeUpdated'\n    })\n  },\n  methods: {\n    validateAndInsertFolder() {\n      this.errors.title = '';\n      if (!this.title) {\n        this.errors.title = 'Title is required.';\n      } else {\n        this.insertFolder();\n      }\n    },\n    insertFolder() {\n      const data = {\n        title: this.title,\n        userId: this.userId\n      };\n      this.$store.dispatch('folder/insertFolderData', data).then(() => {\n        this.$store.dispatch('folder/findAllFolders', this.userId);\n        this.$router.push('/show');\n        this.showUpdateField = false;\n        this.showContentsField = false;\n        this.title = ''; // Clear the form after successful submission\n      }).catch(error => {\n        if (error.response && error.response.data.errors) {\n          this.errors = error.response.data.errors;\n        } else {\n          console.error('An error occurred:', error);\n        }\n      });\n    },\n    updateFolder(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"title\": this.title,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/updateFolder', data).then(() => {\n        console.log(\"status \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.showContentsField = false;\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.$router.push('/show');\n        }\n      });\n    },\n    updateVariable(folderIdToBeUpdated) {\n      this.$store.dispatch('folder/updateFolderId', folderIdToBeUpdated);\n      this.showUpdateField = true;\n      this.showContentsField = false;\n    },\n    createContent(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/findFolderById', data).then(() => {\n        this.showContentsField = false;\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.$store.dispatch('content/toBeUpdated', false);\n          this.$router.push('/create');\n        }\n      });\n    },\n    getAllFoldersByUser() {\n      // send to folder.js actions findFolderById                  \n      this.$store.dispatch('folder/findAllFolders', this.userId).then(() => {\n        this.showContentsField = false;\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.$router.push('/show');\n        }\n      });\n    },\n    deleteFolder(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/deleteFolder', data).then(() => {\n        console.log(\"folderVuew .> methods delete -> response status -> \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.showUpdateField = false;\n          this.showContentsField = false;\n          this.$router.push('/show');\n        }\n      });\n    },\n    showContents(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/getContents', data).then(() => {\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.showContentsField = true;\n          this.$router.push('/show');\n        }\n      });\n    },\n    showContentsInNewWindow(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/getContents', data).then(() => {\n        console.log(\"requestStatus: \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.$router.push('/show-folder');\n        }\n      });\n    },\n    deleteContent(contentId) {\n      this.$store.dispatch('content/deleteContent', contentId).then(() => {\n        if (this.requestStatus <= 200) {\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.showUpdateField = false;\n          this.showContents(this.folderId);\n          this.$router.push('/show');\n        }\n      });\n    },\n    showContent(contentId) {\n      this.$store.dispatch('content/findContentById', contentId);\n      this.$router.push('/content');\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","namespaced","name","data","title","contentsToShow","showUpdateField","showContentsField","errors","computed","authenticated","username","userId","folders","userRole","requestStatus","folderId","folderTitle","contents","toBeUpdated","methods","validateAndInsertFolder","insertFolder","$store","dispatch","then","$router","push","catch","error","response","console","updateFolder","log","updateVariable","folderIdToBeUpdated","createContent","getAllFoldersByUser","deleteFolder","showContents","showContentsInNewWindow","deleteContent","contentId","showContent"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/components/FoldersView.vue"],"sourcesContent":[" <script>\n    /* eslint-disable */\n    //<img src=\"@/assets/logo.png\" alt=\"\">\n    import { mapGetters } from \"vuex\";\n  \n    export default {\n        namespaced: true,\n        name: 'folder',\n\n        data() {\n            return {   \n                title: '',\n                contentsToShow: {},\n                showUpdateField: false,\n                showContentsField: false,\n                errors: {\n                    title: ''\n                },\n                }\n        },\n\n        computed: {  \n            ...mapGetters({\n                    authenticated: 'auth/authenticated',\n                    username: 'auth/username',\n                    userId: 'auth/userId',\n                    folders: 'auth/folders',\n                    userRole: 'auth/userRole',\n                    requestStatus: 'folder/requestStatus',\n                    folderId: 'folder/folderId',\n                    folderTitle: 'folder/title',\n                    contents: \"folder/contents\",\n                    toBeUpdated: 'content/toBeUpdated',                     \n            })\n        },\n\n        methods: { \n            validateAndInsertFolder() {\n                this.errors.title = '';\n\n                if (!this.title) {\n                    this.errors.title = 'Title is required.';\n                } else {\n                    this.insertFolder();\n                }\n                },\n            insertFolder() {\n                const data = { title: this.title, userId: this.userId };\n\n                this.$store.dispatch('folder/insertFolderData', data)\n                    .then(() => {\n                    this.$store.dispatch('folder/findAllFolders', this.userId);\n                    this.$router.push('/show');\n                    this.showUpdateField = false;\n                    this.showContentsField = false;\n                    this.title = ''; // Clear the form after successful submission\n                    })\n                    .catch(error => {\n                    if (error.response && error.response.data.errors) {\n                        this.errors = error.response.data.errors;\n                    } else {\n                        console.error('An error occurred:', error);\n                    }\n                    });\n            },\n\n\n            updateFolder(folderId) {\n                var data = {\n                    \"folderId\": folderId,\n                    \"title\": this.title,\n                    \"userId\": this.userId\n                }  \n                this.$store.dispatch('folder/updateFolder', data)                    \n                .then(() => {     \n                    console.log(\"status \" + this.requestStatus)                  \n                    if (this.requestStatus == 200) {\n                        this.showUpdateField = false\n                        this.showContentsField = false\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.$router.push('/show')                             \n                    }\n                })\n            },                 \n            updateVariable(folderIdToBeUpdated){\n                this.$store.dispatch('folder/updateFolderId', folderIdToBeUpdated) \n                this.showUpdateField = true\n                this.showContentsField = false\n            },\n\n            createContent(folderId) {  \n                var data = {\n                    \"folderId\": folderId,\n                    \"userId\": this.userId\n                }\n                this.$store.dispatch('folder/findFolderById', data)                    \n                .then(() => {  \n                    this.showContentsField = false                     \n                    if (this.requestStatus == 200) {\n                        this.showUpdateField = false  \n                        this.$store.dispatch('content/toBeUpdated', false)                             \n                        \n                        this.$router.push('/create') \n                    }\n                })\n            }, \n\n            getAllFoldersByUser() {\n                // send to folder.js actions findFolderById                  \n                this.$store.dispatch('folder/findAllFolders', this.userId)\n                .then(() => {  \n                    this.showContentsField = false                      \n                    if (this.requestStatus == 200) {\n                        this.showUpdateField = false\n                        this.$router.push('/show') \n                    }\n                })\n            \n            },   \n            deleteFolder(folderId) {                    \n                var data = {\n                    \"folderId\": folderId,\n                    \"userId\": this.userId\n                }\n                this.$store.dispatch('folder/deleteFolder', data)                    \n                .then(() => {     \n                    console.log(\"folderVuew .> methods delete -> response status -> \" + this.requestStatus)    \n                    if (this.requestStatus == 200) {\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.showUpdateField = false\n                        this.showContentsField = false\n                        this.$router.push('/show') \n                    }\n                })  \n            },  \n            showContents(folderId) {\n                var data = {\n                    \"folderId\": folderId,\n                    \"userId\": this.userId\n                }\n                this.$store.dispatch('folder/getContents', data)  \n                .then(() => {   \n                    if (this.requestStatus == 200) {\n                        this.showUpdateField = false\n                        this.showContentsField = true\n                        this.$router.push('/show') \n                        }\n                })  \n            },    \n\n            showContentsInNewWindow(folderId) {\n                var data = {\n                    \"folderId\": folderId,\n                    \"userId\": this.userId\n                }\n                this.$store.dispatch('folder/getContents', data)  \n                .then(() => {   \n                    console.log(\"requestStatus: \" + this.requestStatus)\n                    if (this.requestStatus == 200) { \n                        this.$router.push('/show-folder') \n                    }\n                })\n\n            },   \n\n            deleteContent(contentId){\n                this.$store.dispatch('content/deleteContent', contentId)  \n                .then(() => {   \n                    if (this.requestStatus <= 200) {\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.showUpdateField = false\n                        this.showContents(this.folderId)\n                        this.$router.push('/show') \n                    }\n                })\n            },  \n\n            showContent(contentId) {\n                this.$store.dispatch('content/findContentById', contentId)  \n                this.$router.push('/content') \n            },\n    },\n}      \n</script>\n\n<template>\n    <div class=\"body\">\n        <div id=\"app\" class=\"main\">    \n            <div id='insertFolder'>\n                <form @submit.prevent=\"validateAndInsertFolder\">\n                    <div class=\"form-group\">\n                        <input \n                        type=\"text\" \n                        name=\"title\" \n                        placeholder=\"Your title of new folder\" \n                        v-model=\"title\" \n                        class=\"input-field\" \n                        />\n                        <span class=\"error\" v-if=\"errors.title\">{{ errors.title }}</span>\n                    </div>\n                    <button class=\"styled-button\">Insert New Folder</button>\n                </form>\n            </div>\n        \n            <div id='showFoldersButton'  class=\"styled-button\">\n                <form @submit.prevent=\"getAllFoldersByUser\">\n                    <button  class=\"styled-button\">show all folders</button>\n                </form>\n            </div>\n    \n            <template v-if=\"folders.length > 0\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>title</th>\n                            <th>create new content</th>\n                            <th>Update</th>\n                            <th>Delete</th>\n                            <th>Show contents</th>\n                            <th>Show contents in new window</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"folder in folders\" :key=\"folder.id\">\n                            <td>\n                                {{ folder.title }}\n                            </td>\n                            <td>\n                                <form @submit.prevent=\"createContent(folder.folderId)\">\n                                    <button  class=\"styled-button\" >create new content in this folder</button>\n                                </form>\n                            </td>\n                            <td>\n                            <template v-if=!showUpdateField>  \n                                    <form @submit.prevent=\"updateVariable(folder.folderId)\">\n                                        <button  class=\"styled-button\" >Update folder title</button>\n                                    </form>\n                            </template>\n                            <template v-if=showUpdateField>   \n                                <template v-if=\"folder.folderId == this.folderId\">                    \n                                    <form @submit.prevent=\"updateFolder(this.folderId)\">                                   \n                                        <input \n                                            type=\"text\" \n                                            name=\"title\" \n                                            placeholder=\"you new title\" \n                                            v-model=\"title\"\n                                            class=\"input-field\"\n                                        />\n                                        <button class=\"styled-button\">Update folder title</button>\n                                    </form>  \n                                </template>                                                     \n                            </template>\n                            </td>\n                            <td>\n                                <form @submit.prevent=\"deleteFolder(folder.folderId)\">\n                                    <button class=\"styled-button\">Delete folder</button>\n                                </form>\n                            </td>\n                            <td>\n                                <form @submit.prevent=\"showContents(folder.folderId)\">\n                                    <button class=\"styled-button\">show contents</button>\n                                </form>\n                            </td>\n                            <td>\n                                <form @submit.prevent=\"showContentsInNewWindow(folder.folderId)\">\n                                    <button class=\"styled-button\">show contents in new window</button>\n                                </form>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n             </template>  \n\n             <template v-if=\"showContentsField\">\n                <div v-for=\"content in contents\" :key=\"content.id\">\n                    <div class=\"table\">  \n                        <p>{{  content.title }}</p>\n                        <img :src=\"content.path\" :alt=\"content.title\" width=\"75\" height=\"50\">\n                    <div class=\"content-actions\">\n                        <form @submit.prevent=\"deleteContent(content.id)\">\n                                <button class=\"styled-button\">Delete: {{ content.title }}</button>\n                        </form>   \n                        <form @submit.prevent=\"showContent(content.id)\">\n                                <button class=\"styled-button\">show: {{ content.title }}</button>\n                        </form>                       \n                    </div>\n                </div>\n                </div>    \n             </template>             \n        </div>\n    </div>\n</template>\n\n\n\n<style>\n\n\n\n</style>\n\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}