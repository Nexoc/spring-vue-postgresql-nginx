{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"sidebarDiv\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FoldersView = _resolveComponent(\"FoldersView\");\n  return _ctx.authenticated ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $data.toggleSidebar && $data.toggleSidebar(...args))\n  }, _toDisplayString($data.collapsed ? 'open' : 'close') + \" sidebar\", 1 /* TEXT */)]), _createVNode(_component_FoldersView)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["id","_ctx","authenticated","_createElementBlock","_Fragment","key","_createElementVNode","_hoisted_1","onClick","_cache","args","$data","toggleSidebar","collapsed","_createVNode","_component_FoldersView","_createCommentVNode"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/views/ShowFolders.vue"],"sourcesContent":["<template>\n\n  <template v-if=\"authenticated\">\n    <div id='sidebarDiv'>      \n      <button @click=\"toggleSidebar\">{{ collapsed ? 'open' : 'close' }} sidebar</button>\n    </div>\n      <FoldersView />\n    </template>\n\n\n</template>\n\n<script>\n    /* eslint-disable */\nimport { collapsed, toggleSidebar } from '@/components/sidebar/state'\nimport FoldersView from '@/components/FoldersView.vue'\n\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  namespaced: true,\n  name: 'showFolders',\n\n\n  data() {\n            return {   \n                collapsed, toggleSidebar,\n                title: null,\n                }\n        },\n        components: {\n              FoldersView\n        },\n\n        computed: {  \n            ...mapGetters({\n                    authenticated: 'auth/authenticated',\n                    username: 'auth/username',\n                    userId: 'auth/userId',\n                    requestStatus: 'folder/requestStatus',\n                    folderId: 'folder/folderId',\n                    folderTitle: 'folder/title',\n                    folders: 'auth/folders',\n            })\n        },\n        methods: {  \n\n        }\n\n\n}\n</script>\n\n<style>\n    #sidebarDiv{\n        margin-left: 14px;\n    }\n</style>"],"mappings":";;EAGSA,EAAE,EAAC;AAAY;;;SADNC,IAAA,CAAAC,aAAa,I,cAA7BC,mBAAA,CAKaC,SAAA;IAPfC,GAAA;EAAA,IAGIC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAkF;IAAzEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,KAAA,CAAAC,aAAA,IAAAD,KAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;sBAAKC,KAAA,CAAAE,SAAS,uBAAsB,UAAQ,gB,GAEzEC,YAAA,CAAeC,sBAAA,E,+BANrBC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}