{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\nimport { mapGetters } from \"vuex\";\nexport default {\n  namespaced: true,\n  name: 'folder',\n  data() {\n    return {\n      title: null,\n      showUpdateField: false\n    };\n  },\n  computed: {\n    ...mapGetters({\n      authenticated: 'auth/authenticated',\n      username: 'auth/username',\n      userId: 'auth/userId',\n      folders: 'auth/folders',\n      requestStatus: 'folder/requestStatus',\n      folderId: 'folder/folderId',\n      folderTitle: 'folder/title',\n      contents: \"folder/contents\"\n    })\n  },\n  methods: {\n    insertFolder() {\n      const data = {\n        title: this.title,\n        userId: this.userId\n      };\n      // send to folder.js actions insertFolderdata                    \n      this.$store.dispatch('folder/insertFolderData', data).then(() => {\n        if (this.requestStatus == 201) {\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.$router.push('/');\n          this.showUpdateField = false;\n        }\n      });\n    },\n    updateFolder(folderId) {\n      console.log(\"FolderView.vue method update -> \" + folderId);\n      // TODO UPDATE title\n      console.log(\"methods ->updateFolder -> title: \" + this.title);\n      var data = {\n        \"folderId\": folderId,\n        \"title\": this.title,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/updateFolder', data).then(() => {\n        console.log(\"status \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.$router.push('/');\n        }\n      });\n    },\n    updateVariable(folderIdToBeUpdated) {\n      this.$store.dispatch('folder/updateFolderId', folderIdToBeUpdated);\n      this.showUpdateField = true;\n      console.log(\"this.folderId = \" + this.folderId + \" and folderIdToBeUpdated = \" + folderIdToBeUpdated + \"showUpdateField -> \" + this.showUpdateField);\n    },\n    getFolderById(folderId) {\n      // http://localhost:8001/api/v1/users/'+folder.userId+'/folders/'+folder.folderId\n      console.log(\"FolderView.vue 85 method get f by id -> \" + folderId);\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/findFolderById', data).then(() => {\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.$router.push('/dashboard');\n        }\n      });\n    },\n    getAllFoldersByUser() {\n      // send to folder.js actions findFolderById  \n      console.log(\"FolderView.vue 96 method get All\");\n      this.$store.dispatch('folder/findAllFolders', this.userId).then(() => {\n        if (this.requestStatus == 200) {\n          this.showUpdateField = false;\n          this.$router.push('/');\n        }\n      });\n    },\n    deleteFolder(folderId) {\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/deleteFolder', data).then(() => {\n        console.log(\"folderVuew .> methos -> response status -> \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          // console.log(\"DoldersView.vue -> methods -> delete folder -> if response 200 -> check userId: \" + this.userId)\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.showUpdateField = false;\n          this.$router.push('/');\n        }\n      });\n    },\n    showContents(folderId) {}\n  }\n};","map":{"version":3,"names":["mapGetters","namespaced","name","data","title","showUpdateField","computed","authenticated","username","userId","folders","requestStatus","folderId","folderTitle","contents","methods","insertFolder","$store","dispatch","then","$router","push","updateFolder","console","log","updateVariable","folderIdToBeUpdated","getFolderById","getAllFoldersByUser","deleteFolder","showContents"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/components/FoldersView.vue"],"sourcesContent":["\n\n<template>\n<div class=\"body\">\n    <div id=\"app\" class=\"main\">\n        <img src=\"@/assets/logo.png\" alt=\"\">\n\n        <div id='insertFolder'>\n            <form @submit.prevent=\"insertFolder\">\n                <input type=\"text\" name=\"title\" placeholder=\"your title of new folder\" v-model=\"title\" />\n                <button id='insertFolder'>insert new folder</button>\n            </form>\n        </div>\n\n        <template v-if=\"requestStatus == 201\">\n            <div id='folderInfo'>\n            {{ requestStatus }} <br>\n            {{ folderId }} <br>\n            {{ folderTitle }} <br>\n            </div>                    \n        </template>\n\n        <div id='showFoldersButton'>\n            <form @submit.prevent=\"getAllFoldersByUser\">\n                <button id='showFolders'>show all folders</button>\n            </form>\n        </div>\n\n        <template v-if=\"true\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>title</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                        <th>Show contents</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"folder in folders\" :key=\"folder.id\">\n                        <td>\n                            <form @submit.prevent=\"getFolderById(folder.folderId)\">\n                                <button id='showFolder'>{{ folder.title }}</button>\n                            </form>\n                        </td>\n                        <td>\n                        <template v-if=!showUpdateField>  \n                                <form @submit.prevent=\"updateVariable(folder.folderId)\">\n                                    <button id='updateVariable'>Update</button>\n                                </form>\n                        </template>\n                        <template v-if=showUpdateField>   \n                            <template v-if=\"folder.folderId == this.folderId\">                    \n                                <form @submit.prevent=\"updateFolder(this.folderId)\">                                   \n                                    <input type=\"text\" name=\"title\" placeholder=\"you new title\" v-model=\"title\"/>\n                                    <button id='updateFolder'>Update</button>\n                                </form>  \n                            </template>                                                     \n                        </template>\n                        </td>\n                        <td>\n                            <form @submit.prevent=\"deleteFolder(folder.folderId)\">\n                                <button id='deleteFolder'>Delete</button>\n                            </form>\n                        </td>\n                        <td><form @submit.prevent=\"showContents(folder.folderId)\">\n                                <button id='showContent'>show contents</button>\n                            </form></td>\n                    </tr>\n                </tbody>\n            </table>\n         </template>      \n    </div>\n  </div>\n  </template>\n  \n  \n  <script>\n    /* eslint-disable */\n    import { mapGetters } from \"vuex\";\n  \n    export default {\n        namespaced: true,\n        name: 'folder',\n\n        data() {\n            return {   \n                title: null,\n                showUpdateField: false,\n                }\n        },\n\n        computed: {  \n            ...mapGetters({\n                    authenticated: 'auth/authenticated',\n                    username: 'auth/username',\n                    userId: 'auth/userId',\n                    folders: 'auth/folders',\n                    requestStatus: 'folder/requestStatus',\n                    folderId: 'folder/folderId',\n                    folderTitle: 'folder/title',\n                    contents: \"folder/contents\",\n            })\n        },\n\n        methods: { \n                insertFolder() {\n                    const data = {title: this.title, userId: this.userId}\n                    // send to folder.js actions insertFolderdata                    \n                    this.$store.dispatch('folder/insertFolderData', data)\n                    .then(() => {                        \n                    if (this.requestStatus == 201) {\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.$router.push('/') \n                        this.showUpdateField = false\n                        }\n                    })\n                },    \n                updateFolder(folderId) {\n                    console.log(\"FolderView.vue method update -> \" + folderId) \n                    // TODO UPDATE title\n                    console.log(\"methods ->updateFolder -> title: \" + this.title)\n                    var data = {\n                        \"folderId\": folderId,\n                        \"title\": this.title,\n                        \"userId\": this.userId\n                    }  \n                    this.$store.dispatch('folder/updateFolder', data)                    \n                    .then(() => {     \n                        console.log(\"status \" + this.requestStatus)                  \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$store.dispatch('folder/findAllFolders', this.userId)\n                            this.$router.push('/')                             \n                        }\n                    })\n                },                 \n                updateVariable(folderIdToBeUpdated){\n                    this.$store.dispatch('folder/updateFolderId', folderIdToBeUpdated) \n                    this.showUpdateField = true\n                    console.log(\"this.folderId = \" + this.folderId + \" and folderIdToBeUpdated = \" + folderIdToBeUpdated \n                    + \"showUpdateField -> \" + this.showUpdateField)\n                },\n                getFolderById(folderId) {\n                    // http://localhost:8001/api/v1/users/'+folder.userId+'/folders/'+folder.folderId\n                    console.log(\"FolderView.vue 85 method get f by id -> \" + folderId)   \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/findFolderById', data)                    \n                    .then(() => {                       \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$router.push('/dashboard') \n                        }\n                    })\n                }, \n\n                getAllFoldersByUser() {\n                    // send to folder.js actions findFolderById  \n                    console.log(\"FolderView.vue 96 method get All\")                 \n                    this.$store.dispatch('folder/findAllFolders', this.userId)\n                    .then(() => {                        \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$router.push('/') \n                        }\n                    })\n                \n                },   \n                deleteFolder(folderId) {                    \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/deleteFolder', data)                    \n                    .then(() => {     \n                        console.log(\"folderVuew .> methos -> response status -> \" + this.requestStatus)    \n                        if (this.requestStatus == 200) {\n                            // console.log(\"DoldersView.vue -> methods -> delete folder -> if response 200 -> check userId: \" + this.userId)\n                            this.$store.dispatch('folder/findAllFolders', this.userId)\n                            this.showUpdateField = false\n                            this.$router.push('/') \n                        }\n                    })  \n                },  \n                showContents(folderId) {\n\n                },                         \n        },\n    }\n      \n</script>\n\n<style>\n    #insertFolder{\n        margin-left: 50px;\n    }\n    #folderInfo{\n        margin-left: 50px;\n    }\n    #showFoldersButton{\n        margin: 50px;\n    }\n    .table{\n        margin: 50px;\n        border: 10px solid red;\n    }\n\n</style>\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}