{"ast":null,"code":"import axios from 'axios';\n\n/* eslint-disable */\nconst state = {\n  folderId: null,\n  title: null,\n  userId: null,\n  contents: {},\n  errorFolderId: null,\n  folderStatus: null,\n  requestStatus: null,\n  errorStatus: null\n};\nconst mutations = {\n  findFolderById(state, folderData) {\n    //console.log('folder.js -> mutation ->  findFolderById')\n    state.folderStatus = null;\n    state.errorFolderId = null;\n  },\n  folderStatus(state, folderID) {\n    //console.log('folder.js -> mutation ->  folderStatus')\n    state.folderStatus = \"No folder with ID number: \" + folderID;\n    state.errorFolderId = null;\n  },\n  requestStatus(state, status) {\n    //console.log('folder.js -> mutation ->  requestStatus')\n    state.requestStatus = status;\n  },\n  errorFolderId(state, errorStatus, folderId) {\n    //console.log('folder.js -> mutation ->  error folder id')\n    state.errorFolderId = \"Please use digits. Folder ID: \" + folderId + \" Request status: \" + errorStatus;\n    state.folderStatus = null;\n  },\n  updated(state, folderData) {\n    //console.log('folder.js -> mutation ->  update')\n  },\n  deleteFolder(state, folderData) {\n    //console.log('folder.js -> mutation ->  delete')\n  },\n  insertFolderData(state, folderData) {\n    console.log(\"-> folder.js func insert folder\");\n    console.log(folderData);\n    state.folderId = folderData.folderId;\n    state.title = folderData.title;\n    state.userId = folderData.userId;\n    state.contents = folderData.contents;\n    state.requestStatus = folderData.status;\n    console.log(\"folder.js -> 55 requestStatus: \" + folderData.status);\n  }\n};\nconst actions = {\n  // get folder's data from DB per ID\n  async findAllFolders({\n    dispatch\n  }, userId) {\n    console.log(\"folder.js -> actions -> findAllFolders 60\");\n    let http = \"http://localhost:8001/api/v1/users/\" + userId + \"/folders/all\";\n    let response = await axios.get(http).catch(error => {\n      console.error('Error to show all folders: ', error);\n    });\n    console.log(\"folder.js -> actions -> findAllFolders -> 67 after request\");\n    if (response.status == 200) {\n      console.log(\"folder.js -> actions -> findAllFolders 69\");\n      dispatch('auth/allFoldersData', response.data, {\n        root: true\n      });\n    }\n  },\n  async findFolderById({\n    commit\n  }, folder) {},\n  async updateFolder({\n    commit\n  }, folder) {},\n  async deleteFolder({\n    commit\n  }, folder) {},\n  async insertFolderData({\n    commit\n  }, data) {\n    // Initialize your form data object with required data\n    const folderDto = {\n      folderId: null,\n      title: data.title,\n      userId: data.userId\n    };\n    // Create a new FormData object to send\n    const formData = new FormData();\n    // key is 'folderDto' value is {}\n    formData.append('folderDto', JSON.stringify(folderDto));\n    let http = \"http://localhost:8001/api/v1/users/\" + data.userId + \"/folders/add-folder\";\n    let response = await axios.post(http, formData).catch(error => {\n      console.error('Error during inserting the new FOLDER: ', error);\n    });\n    let responseData = response.data;\n    if (response.status == 201) {\n      let folderData = {\n        \"folderId\": responseData.folderId,\n        \"title\": responseData.title,\n        \"userId\": responseData.userId,\n        \"contents\": responseData.contents,\n        \"status\": response.status\n      };\n      commit('insertFolderData', folderData);\n    }\n  }\n};\nconst getters = {\n  folderId(state) {\n    return state.folderId;\n  },\n  title(state) {\n    return state.title;\n  },\n  userId(state) {\n    return state.userId;\n  },\n  contents(state) {\n    return state.contents;\n  },\n  errorFolderId(state) {\n    return state.errorFolderId;\n  },\n  folderStatus(state) {\n    return state.folderStatus;\n  },\n  requestStatus(state) {\n    return state.requestStatus;\n  },\n  errorStatus(state) {\n    return state.errorStatus;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","folderId","title","userId","contents","errorFolderId","folderStatus","requestStatus","errorStatus","mutations","findFolderById","folderData","folderID","status","updated","deleteFolder","insertFolderData","console","log","actions","findAllFolders","dispatch","http","response","get","catch","error","data","root","commit","folder","updateFolder","folderDto","formData","FormData","append","JSON","stringify","post","responseData","getters","namespaced"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/store/folder.js"],"sourcesContent":["import axios from 'axios'\n\n/* eslint-disable */ \nconst state = {\n        folderId: null, \n        title: null,              \n        userId: null,\n        contents : {},\n        \n        errorFolderId: null,\n        folderStatus : null,\n        requestStatus: null,\n        errorStatus: null,\n\n};\n  \nconst mutations = {\n        findFolderById (state, folderData) {\n            //console.log('folder.js -> mutation ->  findFolderById')\n            state.folderStatus = null\n            state.errorFolderId = null\n        },\n        folderStatus(state, folderID){\n            //console.log('folder.js -> mutation ->  folderStatus')\n            state.folderStatus = \"No folder with ID number: \" + folderID\n            state.errorFolderId = null\n        },\n        requestStatus(state, status) {\n            //console.log('folder.js -> mutation ->  requestStatus')\n            state.requestStatus = status\n        },\n        errorFolderId(state, errorStatus, folderId){\n            //console.log('folder.js -> mutation ->  error folder id')\n            state.errorFolderId = \"Please use digits. Folder ID: \" + folderId + \" Request status: \" + errorStatus\n            state.folderStatus = null\n        },\n        updated(state, folderData) {\n            //console.log('folder.js -> mutation ->  update')\n        },\n        deleteFolder(state, folderData){\n            //console.log('folder.js -> mutation ->  delete')\n        },\n\n        insertFolderData(state, folderData){\n            console.log(\"-> folder.js func insert folder\")\n            console.log(folderData)\n\n            state.folderId = folderData.folderId\n            state.title = folderData.title       \n            state.userId = folderData.userId\n            state.contents = folderData.contents\n            state.requestStatus = folderData.status\n            console.log(\"folder.js -> 55 requestStatus: \" + folderData.status)\n        }\n};\n  \nconst actions = {\n        // get folder's data from DB per ID\n        async findAllFolders({ dispatch }, userId) {\n            console.log(\"folder.js -> actions -> findAllFolders 60\") \n\n            let http = \"http://localhost:8001/api/v1/users/\" + userId + \"/folders/all\"\n            let response = await axios.get(http)\n                .catch(error => {\n                        console.error('Error to show all folders: ', error);\n                                })\n            console.log(\"folder.js -> actions -> findAllFolders -> 67 after request\") \n            if (response.status == 200) {   \n                console.log(\"folder.js -> actions -> findAllFolders 69\")                \n                dispatch('auth/allFoldersData', response.data, { root: true })       \n            }\n        },\n\n        async findFolderById ({ commit }, folder) {},\n\n        async updateFolder ({ commit }, folder) {},\n\n        async deleteFolder ({ commit }, folder) {},\n\n        async insertFolderData ({ commit }, data) {\n            // Initialize your form data object with required data\n            const folderDto = {\n                folderId: null,\n                title: data.title,\n                userId: data.userId\n            };            \n            // Create a new FormData object to send\n            const formData = new FormData();\n            // key is 'folderDto' value is {}\n            formData.append('folderDto', JSON.stringify(folderDto));\n                \n            let http = \"http://localhost:8001/api/v1/users/\" + data.userId + \"/folders/add-folder\"\n            let response = await axios.post(http, formData)\n                .catch(error => {\n                        console.error('Error during inserting the new FOLDER: ', error);\n                                })\n\n            let responseData = response.data;\n            if (response.status == 201) {    \n                let folderData = {\n                        \"folderId\": responseData.folderId,\n                        \"title\": responseData.title,\n                        \"userId\": responseData.userId,\n                        \"contents\": responseData.contents,\n                        \"status\": response.status\n                    }       \n                commit('insertFolderData', folderData)     \n            }\n        },\n};\n  \nconst getters = {\n        folderId (state) {\n                return state.folderId                     \n        },\n        title(state) {\n            return state.title\n        },\n        userId(state) {\n            return state.userId\n        },\n        contents(state) {\n            return state.contents\n        },\n        errorFolderId(state) {\n            return state.errorFolderId\n        },\n        folderStatus(state) {\n            return state.folderStatus\n        },\n        requestStatus(state) {\n            return state.requestStatus\n        },\n        errorStatus(state) {\n            return state.errorStatus\n        },\n};  \n\nexport default {\n        namespaced: true,\n        state,\n        mutations,\n        actions,\n        getters,\n};\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}