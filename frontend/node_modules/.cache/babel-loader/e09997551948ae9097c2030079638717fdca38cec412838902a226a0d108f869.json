{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'registrationView',\n  data() {\n    return {\n      data: {\n        name: '',\n        email: '',\n        username: '',\n        password: ''\n      },\n      errors: {\n        name: '',\n        email: '',\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    validateForm() {\n      let valid = true;\n      this.errors = {\n        name: '',\n        email: '',\n        username: '',\n        password: ''\n      };\n      if (!this.data.name) {\n        this.errors.name = 'Name is required.';\n        valid = false;\n      }\n      if (this.data.name.length < 5) {\n        this.errors.name = 'Name must be at least 8 characters.';\n        valid = false;\n      }\n      if (!this.data.email) {\n        this.errors.email = 'Email is required.';\n        valid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.data.email)) {\n        this.errors.email = 'Email must be valid.';\n        valid = false;\n      }\n      if (!this.data.username) {\n        this.errors.username = 'Username is required.';\n        valid = false;\n      }\n      if (this.data.username.length < 5) {\n        this.errors.username = 'Username must be at least 8 characters.';\n        valid = false;\n      }\n      if (!this.data.password) {\n        this.errors.password = 'Password is required.';\n        valid = false;\n      } else if (this.data.password.length < 8) {\n        this.errors.password = 'Password must be at least 8 characters.';\n        valid = false;\n      }\n      return valid;\n    },\n    insertUser() {\n      if (this.validateForm()) {\n        this.$store.dispatch('auth/insertUser', this.data).then(() => {\n          if (this.authenticated) {\n            this.$router.push('/');\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","email","username","password","errors","methods","validateForm","valid","length","test","insertUser","$store","dispatch","then","authenticated","$router","push"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/views/login/Registration2.vue"],"sourcesContent":["<template>\n  <div class=\"signup\">\n    <form @submit.prevent=\"insertUser\">\n      <div id=\"createUser\">\n        <div class=\"form-group\">\n          <label>Username:</label>\n          <input type=\"text\" placeholder=\"username\" v-model=\"data.username\" />\n          <span class=\"error\" v-if=\"errors.username\">{{ errors.username }}</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Name:</label>\n          <input type=\"text\" placeholder=\"Name\" v-model=\"data.name\" />\n          <span class=\"error\" v-if=\"errors.name\">{{ errors.name }}</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Email:</label>\n          <input type=\"email\" placeholder=\"email\" v-model=\"data.email\" />\n          <span class=\"error\" v-if=\"errors.email\">{{ errors.email }}</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Password:</label>\n          <input type=\"password\" placeholder=\"password\" v-model=\"data.password\" />\n          <span class=\"error\" v-if=\"errors.password\">{{ errors.password }}</span>\n        </div>\n      </div>\n      <button id=\"createUser\" class=\"btn-submit\">Registration</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'registrationView',\n  data() {\n    return {\n      data: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n      },\n      errors: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n      },\n    };\n  },\n  methods: {\n    validateForm() {\n      let valid = true;\n      this.errors = {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n      };\n\n      if (!this.data.name) {\n        this.errors.name = 'Name is required.';\n        valid = false;\n      }\n      if (this.data.name.length < 5) {\n        this.errors.name = 'Name must be at least 8 characters.';\n        valid = false;\n      }\n      if (!this.data.email) {\n        this.errors.email = 'Email is required.';\n        valid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.data.email)) {\n        this.errors.email = 'Email must be valid.';\n        valid = false;\n      }\n      if (!this.data.username) {\n        this.errors.username = 'Username is required.';\n        valid = false;\n      }\n      if (this.data.username.length < 5) {\n        this.errors.username = 'Username must be at least 8 characters.';\n        valid = false;\n      }\n\n\n      if (!this.data.password) {\n        this.errors.password = 'Password is required.';\n        valid = false;\n      } else if (this.data.password.length < 8) {\n        this.errors.password = 'Password must be at least 8 characters.';\n        valid = false;\n      }\n\n      return valid;\n    },\n    insertUser() {\n      if (this.validateForm()) {\n        this.$store.dispatch('auth/insertUser', this.data)\n          .then(() => {\n            if (this.authenticated) {\n              this.$router.push('/');\n            }\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.signup {\n  max-width: 400px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n}\n\n#createUser {\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.form-group .error {\n  color: red;\n  font-size: 0.875em;\n  margin-top: 5px;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-submit:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAkCA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAE;QACJD,IAAI,EAAE,EAAE;QACRE,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE;QACNL,IAAI,EAAE,EAAE;QACRE,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAIC,KAAI,GAAI,IAAI;MAChB,IAAI,CAACH,MAAK,GAAI;QACZL,IAAI,EAAE,EAAE;QACRE,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MAED,IAAI,CAAC,IAAI,CAACH,IAAI,CAACD,IAAI,EAAE;QACnB,IAAI,CAACK,MAAM,CAACL,IAAG,GAAI,mBAAmB;QACtCQ,KAAI,GAAI,KAAK;MACf;MACA,IAAI,IAAI,CAACP,IAAI,CAACD,IAAI,CAACS,MAAK,GAAI,CAAC,EAAE;QAC7B,IAAI,CAACJ,MAAM,CAACL,IAAG,GAAI,qCAAqC;QACxDQ,KAAI,GAAI,KAAK;MACf;MACA,IAAI,CAAC,IAAI,CAACP,IAAI,CAACC,KAAK,EAAE;QACpB,IAAI,CAACG,MAAM,CAACH,KAAI,GAAI,oBAAoB;QACxCM,KAAI,GAAI,KAAK;MACf,OAAO,IAAI,CAAC,cAAc,CAACE,IAAI,CAAC,IAAI,CAACT,IAAI,CAACC,KAAK,CAAC,EAAE;QAChD,IAAI,CAACG,MAAM,CAACH,KAAI,GAAI,sBAAsB;QAC1CM,KAAI,GAAI,KAAK;MACf;MACA,IAAI,CAAC,IAAI,CAACP,IAAI,CAACE,QAAQ,EAAE;QACvB,IAAI,CAACE,MAAM,CAACF,QAAO,GAAI,uBAAuB;QAC9CK,KAAI,GAAI,KAAK;MACf;MACA,IAAI,IAAI,CAACP,IAAI,CAACE,QAAQ,CAACM,MAAK,GAAI,CAAC,EAAE;QACjC,IAAI,CAACJ,MAAM,CAACF,QAAO,GAAI,yCAAyC;QAChEK,KAAI,GAAI,KAAK;MACf;MAGA,IAAI,CAAC,IAAI,CAACP,IAAI,CAACG,QAAQ,EAAE;QACvB,IAAI,CAACC,MAAM,CAACD,QAAO,GAAI,uBAAuB;QAC9CI,KAAI,GAAI,KAAK;MACf,OAAO,IAAI,IAAI,CAACP,IAAI,CAACG,QAAQ,CAACK,MAAK,GAAI,CAAC,EAAE;QACxC,IAAI,CAACJ,MAAM,CAACD,QAAO,GAAI,yCAAyC;QAChEI,KAAI,GAAI,KAAK;MACf;MAEA,OAAOA,KAAK;IACd,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACJ,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAACZ,IAAI,EAC9Ca,IAAI,CAAC,MAAM;UACV,IAAI,IAAI,CAACC,aAAa,EAAE;YACtB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACxB;QACF,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}