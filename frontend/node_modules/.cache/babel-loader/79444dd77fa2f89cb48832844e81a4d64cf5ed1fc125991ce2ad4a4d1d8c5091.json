{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nfunction tinycolor(...args) {\n  return new TinyColor(...args);\n}\nfunction _colorChange(data, oldHue) {\n  const alpha = data && data.a;\n  let color;\n\n  // hsl is better than hex between conversions\n  if (data && data.hsl) color = tinycolor(data.hsl);else if (data && data.hex && data.hex.length > 0) color = tinycolor(data.hex);else if (data && data.hsv) color = tinycolor(data.hsv);else if (data && data.rgba) color = tinycolor(data.rgba);else if (data && data.rgb) color = tinycolor(data.rgb);else color = tinycolor(data);\n  if (color && (color._a === undefined || color._a === null)) color.setAlpha(alpha || color.getAlpha());\n  const hsl = color.toHsl();\n  const hsv = color.toHsv();\n  if (hsl.s === 0) hsv.h = hsl.h = data.h || data.hsl && data.hsl.h || oldHue || 0;\n\n  /* --- comment this block to fix #109, may cause #25 again --- */\n  // when the hsv.v is less than 0.0164 (base on test)\n  // because of possible loss of precision\n  // the result of hue and saturation would be miscalculated\n  if (hsv.v < 0.0164) {\n    hsv.h = data.h || data.hsv && data.hsv.h || 0;\n    hsv.s = data.s || data.hsv && data.hsv.s || 0;\n  }\n  if (hsl.l < 0.01) {\n    hsl.h = data.h || data.hsl && data.hsl.h || 0;\n    hsl.s = data.s || data.hsl && data.hsl.s || 0;\n  }\n  /* ------ */\n\n  return {\n    hsl,\n    hex: color.toHexString().toUpperCase(),\n    hex8: color.toHex8String().toUpperCase(),\n    rgba: color.toRgb(),\n    hsv,\n    oldHue: data.h || oldHue || hsl.h,\n    source: data.source,\n    a: color.getAlpha()\n  };\n}\nvar colorMixin = {\n  model: {\n    prop: 'modelValue',\n    event: 'update:modelValue'\n  },\n  props: ['modelValue'],\n  data() {\n    return {\n      val: _colorChange(this.modelValue)\n    };\n  },\n  computed: {\n    colors: {\n      get() {\n        return this.val;\n      },\n      set(newVal) {\n        this.val = newVal;\n        this.$emit('update:modelValue', newVal);\n      }\n    }\n  },\n  watch: {\n    modelValue(newVal) {\n      this.val = _colorChange(newVal);\n    }\n  },\n  methods: {\n    colorChange(data, oldHue) {\n      this.oldHue = this.colors.hsl.h;\n      this.colors = _colorChange(data, oldHue || this.oldHue);\n    },\n    isValidHex(hex) {\n      return tinycolor(hex).isValid;\n    },\n    simpleCheckForValidColor(data) {\n      const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];\n      let checked = 0;\n      let passed = 0;\n      for (let i = 0; i < keysToCheck.length; i++) {\n        const letter = keysToCheck[i];\n        if (data[letter]) {\n          checked++;\n          if (!isNaN(data[letter])) passed++;\n        }\n      }\n      if (checked === passed) return data;\n    },\n    paletteUpperCase(palette) {\n      return palette.map(c => c.toUpperCase());\n    },\n    isTransparent(color) {\n      return tinycolor(color).getAlpha() === 0;\n    }\n  }\n};\nexport { colorMixin as default };","map":{"version":3,"names":["TinyColor","tinycolor","args","_colorChange","data","oldHue","alpha","a","color","hsl","hex","length","hsv","rgba","rgb","_a","undefined","setAlpha","getAlpha","toHsl","toHsv","s","h","v","l","toHexString","toUpperCase","hex8","toHex8String","toRgb","source","colorMixin","model","prop","event","props","val","modelValue","computed","colors","get","set","newVal","$emit","watch","methods","colorChange","isValidHex","isValid","simpleCheckForValidColor","keysToCheck","checked","passed","i","letter","isNaN","paletteUpperCase","palette","map","c","isTransparent","default"],"sources":["/home/nexoc/JS/frontend/frontend-vue/node_modules/@ckpack/vue-color/libs/mixin/color.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\n\nfunction tinycolor(...args) {\n  return new TinyColor(...args);\n}\n\nfunction _colorChange(data, oldHue) {\n  const alpha = data && data.a;\n  let color;\n\n  // hsl is better than hex between conversions\n  if (data && data.hsl)\n    color = tinycolor(data.hsl);\n  else if (data && data.hex && data.hex.length > 0)\n    color = tinycolor(data.hex);\n  else if (data && data.hsv)\n    color = tinycolor(data.hsv);\n  else if (data && data.rgba)\n    color = tinycolor(data.rgba);\n  else if (data && data.rgb)\n    color = tinycolor(data.rgb);\n  else\n    color = tinycolor(data);\n\n  if (color && (color._a === undefined || color._a === null))\n    color.setAlpha(alpha || color.getAlpha());\n\n  const hsl = color.toHsl();\n  const hsv = color.toHsv();\n\n  if (hsl.s === 0)\n    hsv.h = hsl.h = data.h || (data.hsl && data.hsl.h) || oldHue || 0;\n\n  /* --- comment this block to fix #109, may cause #25 again --- */\n  // when the hsv.v is less than 0.0164 (base on test)\n  // because of possible loss of precision\n  // the result of hue and saturation would be miscalculated\n  if (hsv.v < 0.0164) {\n    hsv.h = data.h || (data.hsv && data.hsv.h) || 0;\n    hsv.s = data.s || (data.hsv && data.hsv.s) || 0;\n  }\n\n  if (hsl.l < 0.01) {\n    hsl.h = data.h || (data.hsl && data.hsl.h) || 0;\n    hsl.s = data.s || (data.hsl && data.hsl.s) || 0;\n  }\n  /* ------ */\n\n  return {\n    hsl,\n    hex: color.toHexString().toUpperCase(),\n    hex8: color.toHex8String().toUpperCase(),\n    rgba: color.toRgb(),\n    hsv,\n    oldHue: data.h || oldHue || hsl.h,\n    source: data.source,\n    a: color.getAlpha(),\n  };\n}\n\nvar colorMixin = {\n  model: {\n    prop: 'modelValue',\n    event: 'update:modelValue',\n  },\n  props: ['modelValue'],\n  data() {\n    return {\n      val: _colorChange(this.modelValue),\n    };\n  },\n  computed: {\n    colors: {\n      get() {\n        return this.val;\n      },\n      set(newVal) {\n        this.val = newVal;\n        this.$emit('update:modelValue', newVal);\n      },\n    },\n  },\n  watch: {\n    modelValue(newVal) {\n      this.val = _colorChange(newVal);\n    },\n  },\n  methods: {\n    colorChange(data, oldHue) {\n      this.oldHue = this.colors.hsl.h;\n      this.colors = _colorChange(data, oldHue || this.oldHue);\n    },\n    isValidHex(hex) {\n      return tinycolor(hex).isValid;\n    },\n    simpleCheckForValidColor(data) {\n      const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];\n      let checked = 0;\n      let passed = 0;\n\n      for (let i = 0; i < keysToCheck.length; i++) {\n        const letter = keysToCheck[i];\n        if (data[letter]) {\n          checked++;\n          if (!isNaN(data[letter]))\n            passed++;\n        }\n      }\n\n      if (checked === passed)\n        return data;\n    },\n    paletteUpperCase(palette) {\n      return palette.map(c => c.toUpperCase());\n    },\n    isTransparent(color) {\n      return tinycolor(color).getAlpha() === 0;\n    },\n  },\n};\n\nexport { colorMixin as default };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,OAAO,IAAIF,SAAS,CAAC,GAAGE,IAAI,CAAC;AAC/B;AAEA,SAASC,YAAYA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAClC,MAAMC,KAAK,GAAGF,IAAI,IAAIA,IAAI,CAACG,CAAC;EAC5B,IAAIC,KAAK;;EAET;EACA,IAAIJ,IAAI,IAAIA,IAAI,CAACK,GAAG,EAClBD,KAAK,GAAGP,SAAS,CAACG,IAAI,CAACK,GAAG,CAAC,CAAC,KACzB,IAAIL,IAAI,IAAIA,IAAI,CAACM,GAAG,IAAIN,IAAI,CAACM,GAAG,CAACC,MAAM,GAAG,CAAC,EAC9CH,KAAK,GAAGP,SAAS,CAACG,IAAI,CAACM,GAAG,CAAC,CAAC,KACzB,IAAIN,IAAI,IAAIA,IAAI,CAACQ,GAAG,EACvBJ,KAAK,GAAGP,SAAS,CAACG,IAAI,CAACQ,GAAG,CAAC,CAAC,KACzB,IAAIR,IAAI,IAAIA,IAAI,CAACS,IAAI,EACxBL,KAAK,GAAGP,SAAS,CAACG,IAAI,CAACS,IAAI,CAAC,CAAC,KAC1B,IAAIT,IAAI,IAAIA,IAAI,CAACU,GAAG,EACvBN,KAAK,GAAGP,SAAS,CAACG,IAAI,CAACU,GAAG,CAAC,CAAC,KAE5BN,KAAK,GAAGP,SAAS,CAACG,IAAI,CAAC;EAEzB,IAAII,KAAK,KAAKA,KAAK,CAACO,EAAE,KAAKC,SAAS,IAAIR,KAAK,CAACO,EAAE,KAAK,IAAI,CAAC,EACxDP,KAAK,CAACS,QAAQ,CAACX,KAAK,IAAIE,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMT,GAAG,GAAGD,KAAK,CAACW,KAAK,CAAC,CAAC;EACzB,MAAMP,GAAG,GAAGJ,KAAK,CAACY,KAAK,CAAC,CAAC;EAEzB,IAAIX,GAAG,CAACY,CAAC,KAAK,CAAC,EACbT,GAAG,CAACU,CAAC,GAAGb,GAAG,CAACa,CAAC,GAAGlB,IAAI,CAACkB,CAAC,IAAKlB,IAAI,CAACK,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACa,CAAE,IAAIjB,MAAM,IAAI,CAAC;;EAEnE;EACA;EACA;EACA;EACA,IAAIO,GAAG,CAACW,CAAC,GAAG,MAAM,EAAE;IAClBX,GAAG,CAACU,CAAC,GAAGlB,IAAI,CAACkB,CAAC,IAAKlB,IAAI,CAACQ,GAAG,IAAIR,IAAI,CAACQ,GAAG,CAACU,CAAE,IAAI,CAAC;IAC/CV,GAAG,CAACS,CAAC,GAAGjB,IAAI,CAACiB,CAAC,IAAKjB,IAAI,CAACQ,GAAG,IAAIR,IAAI,CAACQ,GAAG,CAACS,CAAE,IAAI,CAAC;EACjD;EAEA,IAAIZ,GAAG,CAACe,CAAC,GAAG,IAAI,EAAE;IAChBf,GAAG,CAACa,CAAC,GAAGlB,IAAI,CAACkB,CAAC,IAAKlB,IAAI,CAACK,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACa,CAAE,IAAI,CAAC;IAC/Cb,GAAG,CAACY,CAAC,GAAGjB,IAAI,CAACiB,CAAC,IAAKjB,IAAI,CAACK,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACY,CAAE,IAAI,CAAC;EACjD;EACA;;EAEA,OAAO;IACLZ,GAAG;IACHC,GAAG,EAAEF,KAAK,CAACiB,WAAW,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACtCC,IAAI,EAAEnB,KAAK,CAACoB,YAAY,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC;IACxCb,IAAI,EAAEL,KAAK,CAACqB,KAAK,CAAC,CAAC;IACnBjB,GAAG;IACHP,MAAM,EAAED,IAAI,CAACkB,CAAC,IAAIjB,MAAM,IAAII,GAAG,CAACa,CAAC;IACjCQ,MAAM,EAAE1B,IAAI,CAAC0B,MAAM;IACnBvB,CAAC,EAAEC,KAAK,CAACU,QAAQ,CAAC;EACpB,CAAC;AACH;AAEA,IAAIa,UAAU,GAAG;EACfC,KAAK,EAAE;IACLC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,EAAE,CAAC,YAAY,CAAC;EACrB/B,IAAIA,CAAA,EAAG;IACL,OAAO;MACLgC,GAAG,EAAEjC,YAAY,CAAC,IAAI,CAACkC,UAAU;IACnC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACJ,GAAG;MACjB,CAAC;MACDK,GAAGA,CAACC,MAAM,EAAE;QACV,IAAI,CAACN,GAAG,GAAGM,MAAM;QACjB,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,MAAM,CAAC;MACzC;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACLP,UAAUA,CAACK,MAAM,EAAE;MACjB,IAAI,CAACN,GAAG,GAAGjC,YAAY,CAACuC,MAAM,CAAC;IACjC;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,WAAWA,CAAC1C,IAAI,EAAEC,MAAM,EAAE;MACxB,IAAI,CAACA,MAAM,GAAG,IAAI,CAACkC,MAAM,CAAC9B,GAAG,CAACa,CAAC;MAC/B,IAAI,CAACiB,MAAM,GAAGpC,YAAY,CAACC,IAAI,EAAEC,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC;IACzD,CAAC;IACD0C,UAAUA,CAACrC,GAAG,EAAE;MACd,OAAOT,SAAS,CAACS,GAAG,CAAC,CAACsC,OAAO;IAC/B,CAAC;IACDC,wBAAwBA,CAAC7C,IAAI,EAAE;MAC7B,MAAM8C,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC5D,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,MAAM,GAAG,CAAC;MAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACvC,MAAM,EAAE0C,CAAC,EAAE,EAAE;QAC3C,MAAMC,MAAM,GAAGJ,WAAW,CAACG,CAAC,CAAC;QAC7B,IAAIjD,IAAI,CAACkD,MAAM,CAAC,EAAE;UAChBH,OAAO,EAAE;UACT,IAAI,CAACI,KAAK,CAACnD,IAAI,CAACkD,MAAM,CAAC,CAAC,EACtBF,MAAM,EAAE;QACZ;MACF;MAEA,IAAID,OAAO,KAAKC,MAAM,EACpB,OAAOhD,IAAI;IACf,CAAC;IACDoD,gBAAgBA,CAACC,OAAO,EAAE;MACxB,OAAOA,OAAO,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACjC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IACDkC,aAAaA,CAACpD,KAAK,EAAE;MACnB,OAAOP,SAAS,CAACO,KAAK,CAAC,CAACU,QAAQ,CAAC,CAAC,KAAK,CAAC;IAC1C;EACF;AACF,CAAC;AAED,SAASa,UAAU,IAAI8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}