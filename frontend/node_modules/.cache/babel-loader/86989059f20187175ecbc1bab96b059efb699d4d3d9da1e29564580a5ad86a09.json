{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/logo.png';\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  id: \"app\",\n  class: \"main\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  id: \"insertFolder\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"insertFolder\"\n}, \"insert new folder\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0,\n  id: \"folderInfo\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  id: \"showFoldersButton\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"showFolders\"\n}, \"show all folders\", -1 /* HOISTED */);\nconst _hoisted_12 = [_hoisted_11];\nconst _hoisted_13 = {\n  key: 1,\n  class: \"table\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"title\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Update\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Delete\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Show contents\")])], -1 /* HOISTED */);\nconst _hoisted_15 = [\"onSubmit\"];\nconst _hoisted_16 = {\n  id: \"showFolder\"\n};\nconst _hoisted_17 = [\"onSubmit\"];\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"updateVariable\"\n}, \"Update\", -1 /* HOISTED */);\nconst _hoisted_19 = [_hoisted_18];\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"updateFolder\"\n}, \"Update\", -1 /* HOISTED */);\nconst _hoisted_21 = [\"onSubmit\"];\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"deleteFolder\"\n}, \"Delete\", -1 /* HOISTED */);\nconst _hoisted_23 = [_hoisted_22];\nconst _hoisted_24 = [\"onSubmit\"];\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"showContent\"\n}, \"show contents\", -1 /* HOISTED */);\nconst _hoisted_26 = [_hoisted_25];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.insertFolder && $options.insertFolder(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"your title of new folder\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _hoisted_5], 32 /* NEED_HYDRATION */)]), _ctx.requestStatus == 201 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createTextVNode(_toDisplayString(_ctx.requestStatus) + \" \", 1 /* TEXT */), _hoisted_7, _createTextVNode(\" \" + _toDisplayString(_ctx.folderId) + \" \", 1 /* TEXT */), _hoisted_8, _createTextVNode(\" \" + _toDisplayString(_ctx.folderTitle) + \" \", 1 /* TEXT */), _hoisted_9])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.getAllFoldersByUser && $options.getAllFoldersByUser(...args), [\"prevent\"]))\n  }, [..._hoisted_12], 32 /* NEED_HYDRATION */)]), true ? (_openBlock(), _createElementBlock(\"table\", _hoisted_13, [_hoisted_14, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.folders, folder => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: folder.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.getFolderById(folder.folderId), [\"prevent\"])\n    }, [_createElementVNode(\"button\", _hoisted_16, _toDisplayString(folder.title), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_15)]), _createElementVNode(\"td\", null, [!$data.showUpdateField ? (_openBlock(), _createElementBlock(\"form\", {\n      key: 0,\n      onSubmit: _withModifiers($event => $options.updateVariable(folder.folderId), [\"prevent\"])\n    }, [..._hoisted_19], 40 /* PROPS, NEED_HYDRATION */, _hoisted_17)) : _createCommentVNode(\"v-if\", true), $data.showUpdateField ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [folder.folderId == this.folderId ? (_openBlock(), _createElementBlock(\"form\", {\n      key: 0,\n      onSubmit: _cache[4] || (_cache[4] = _withModifiers($event => $options.updateFolder(this.folderId), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"you new title\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.title = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _hoisted_20], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [_createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.deleteFolder(folder.folderId), [\"prevent\"])\n    }, [..._hoisted_23], 40 /* PROPS, NEED_HYDRATION */, _hoisted_21)]), _createElementVNode(\"td\", null, [_createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.showContents(folder.folderId), [\"prevent\"])\n    }, [..._hoisted_26], 40 /* PROPS, NEED_HYDRATION */, _hoisted_24)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["_imports_0","class","id","_createElementVNode","src","alt","key","_hoisted_11","_hoisted_18","_hoisted_22","_hoisted_25","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","insertFolder","type","name","placeholder","$event","$data","title","_hoisted_5","_ctx","requestStatus","_hoisted_6","_createTextVNode","_toDisplayString","_hoisted_7","folderId","_hoisted_8","folderTitle","_hoisted_9","_createCommentVNode","_hoisted_10","getAllFoldersByUser","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","folders","folder","getFolderById","_hoisted_16","_hoisted_15","showUpdateField","updateVariable","_hoisted_19","_hoisted_17","updateFolder","_hoisted_20","deleteFolder","_hoisted_23","_hoisted_21","showContents","_hoisted_26","_hoisted_24"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/components/FoldersView.vue"],"sourcesContent":["\n\n<template>\n<div class=\"body\">\n    <div id=\"app\" class=\"main\">\n        <img src=\"@/assets/logo.png\" alt=\"\">\n\n        <div id='insertFolder'>\n            <form @submit.prevent=\"insertFolder\">\n                <input type=\"text\" name=\"title\" placeholder=\"your title of new folder\" v-model=\"title\" />\n                <button id='insertFolder'>insert new folder</button>\n            </form>\n        </div>\n\n        <template v-if=\"requestStatus == 201\">\n            <div id='folderInfo'>\n            {{ requestStatus }} <br>\n            {{ folderId }} <br>\n            {{ folderTitle }} <br>\n            </div>                    \n        </template>\n\n        <div id='showFoldersButton'>\n            <form @submit.prevent=\"getAllFoldersByUser\">\n                <button id='showFolders'>show all folders</button>\n            </form>\n        </div>\n\n        <template v-if=\"true\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>title</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                        <th>Show contents</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"folder in folders\" :key=\"folder.id\">\n                        <td>\n                            <form @submit.prevent=\"getFolderById(folder.folderId)\">\n                                <button id='showFolder'>{{ folder.title }}</button>\n                            </form>\n                        </td>\n                        <td>\n                        <template v-if=!showUpdateField>  \n                                <form @submit.prevent=\"updateVariable(folder.folderId)\">\n                                    <button id='updateVariable'>Update</button>\n                                </form>\n                        </template>\n                        <template v-if=showUpdateField>   \n                            <template v-if=\"folder.folderId == this.folderId\">                    \n                                <form @submit.prevent=\"updateFolder(this.folderId)\">                                   \n                                    <input type=\"text\" name=\"title\" placeholder=\"you new title\" v-model=\"title\"/>\n                                    <button id='updateFolder'>Update</button>\n                                </form>  \n                            </template>                                                     \n                        </template>\n                        </td>\n                        <td>\n                            <form @submit.prevent=\"deleteFolder(folder.folderId)\">\n                                <button id='deleteFolder'>Delete</button>\n                            </form>\n                        </td>\n                        <td><form @submit.prevent=\"showContents(folder.folderId)\">\n                                <button id='showContent'>show contents</button>\n                            </form></td>\n                    </tr>\n                </tbody>\n            </table>\n         </template>      \n    </div>\n  </div>\n  </template>\n  \n  \n  <script>\n    /* eslint-disable */\n    import { mapGetters } from \"vuex\";\n  \n    export default {\n        namespaced: true,\n        name: 'folder',\n\n        data() {\n            return {   \n                title: null,\n                showUpdateField: false,\n                }\n        },\n\n        computed: {  \n            ...mapGetters({\n                    authenticated: 'auth/authenticated',\n                    username: 'auth/username',\n                    userId: 'auth/userId',\n                    folders: 'auth/folders',\n                    requestStatus: 'folder/requestStatus',\n                    folderId: 'folder/folderId',\n                    folderTitle: 'folder/title',\n                    contents: \"folder/contents\",\n            })\n        },\n\n        methods: { \n                insertFolder() {\n                    const data = {title: this.title, userId: this.userId}\n                    // send to folder.js actions insertFolderdata                    \n                    this.$store.dispatch('folder/insertFolderData', data)\n                    .then(() => {                        \n                    if (this.requestStatus == 201) {\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.$router.push('/') \n                        this.showUpdateField = false\n                        }\n                    })\n                },    \n                updateFolder(folderId) {\n                    console.log(\"FolderView.vue method update -> \" + folderId) \n                    // TODO UPDATE title\n                    console.log(\"methods ->updateFolder -> title: \" + this.title)\n                    var data = {\n                        \"folderId\": folderId,\n                        \"title\": this.title,\n                        \"userId\": this.userId\n                    }  \n                    this.$store.dispatch('folder/updateFolder', data)                    \n                    .then(() => {     \n                        console.log(\"status \" + this.requestStatus)                  \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$store.dispatch('folder/findAllFolders', this.userId)\n                            this.$router.push('/')                             \n                        }\n                    })\n                },                 \n                updateVariable(folderIdToBeUpdated){\n                    this.$store.dispatch('folder/updateFolderId', folderIdToBeUpdated) \n                    this.showUpdateField = true\n                    console.log(\"this.folderId = \" + this.folderId + \" and folderIdToBeUpdated = \" + folderIdToBeUpdated \n                    + \"showUpdateField -> \" + this.showUpdateField)\n                },\n                getFolderById(folderId) {\n                    // http://localhost:8001/api/v1/users/'+folder.userId+'/folders/'+folder.folderId\n                    console.log(\"FolderView.vue 85 method get f by id -> \" + folderId)   \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/findFolderById', data)                    \n                    .then(() => {                       \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$router.push('/dashboard') \n                        }\n                    })\n                }, \n\n                getAllFoldersByUser() {\n                    // send to folder.js actions findFolderById  \n                    console.log(\"FolderView.vue 96 method get All\")                 \n                    this.$store.dispatch('folder/findAllFolders', this.userId)\n                    .then(() => {                        \n                        if (this.requestStatus == 200) {\n                            this.showUpdateField = false\n                            this.$router.push('/') \n                        }\n                    })\n                \n                },   \n                deleteFolder(folderId) {                    \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/deleteFolder', data)                    \n                    .then(() => {     \n                        console.log(\"folderVuew .> methods delete -> response status -> \" + this.requestStatus)    \n                        if (this.requestStatus == 200) {\n                            // console.log(\"DoldersView.vue -> methods -> delete folder -> if response 200 -> check userId: \" + this.userId)\n                            this.$store.dispatch('folder/findAllFolders', this.userId)\n                            this.showUpdateField = false\n                            this.$router.push('/') \n                        }\n                    })  \n                },  \n                showContents(folderId) {\n                    this.$store.dispatch('folder/getContents', folderId)   \n                    .then(() => {     \n                    console.log(\"folderVuew .> method show contents -> response status -> \" + this.requestStatus)    \n                        if (this.requestStatus == 200) {\n                            // console.log(\"DoldersView.vue -> methods -> delete folder -> if response 200 -> check userId: \" + this.userId)\n                            this.$store.dispatch('folder/findAllFolders', this.userId)\n                            this.showUpdateField = false\n                            this.$router.push('/') \n                        }\n                    })  \n                },                         \n        },\n    }\n      \n</script>\n\n<style>\n    #insertFolder{\n        margin-left: 50px;\n    }\n    #folderInfo{\n        margin-left: 50px;\n    }\n    #showFoldersButton{\n        margin: 50px;\n    }\n    .table{\n        margin: 50px;\n        border: 10px solid red;\n    }\n\n</style>\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}