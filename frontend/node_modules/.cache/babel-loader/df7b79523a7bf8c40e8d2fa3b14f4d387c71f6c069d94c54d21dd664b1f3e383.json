{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, \"The sidebar is \" + _toDisplayString($setup.collapsed ? 'closed' : 'open'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleSidebar && $setup.toggleSidebar(...args))\n  }, \"Toggle Sidebar\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","$setup","collapsed","onClick","_cache","args","toggleSidebar"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/views/ShowFolders.vue"],"sourcesContent":["<template>\n  <h1>The sidebar is {{ collapsed ? 'closed' : 'open' }}</h1>\n  <button @click=\"toggleSidebar\">Toggle Sidebar</button>\n\n  \n\n</template>\n\n<script>\nimport { collapsed, toggleSidebar } from '@/components/sidebar/state'\n    /* eslint-disable */\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  namespaced: true,\n  name: 'showFolders',\n\n  setup() {\n    return { collapsed, toggleSidebar }\n  }\n}\n</script>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAA2D,YAAvD,iBAAe,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,SAAS,sCAC/BH,mBAAA,CAAsD;IAA7CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,MAAA,CAAAK,aAAA,IAAAL,MAAA,CAAAK,aAAA,IAAAD,IAAA,CAAa;KAAE,gBAAc,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}