{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\nimport { mapGetters } from \"vuex\";\nexport default {\n  namespaced: true,\n  name: 'folder',\n  data() {\n    return {\n      title: null\n    };\n  },\n  computed: {\n    ...mapGetters({\n      authenticated: 'auth/authenticated',\n      username: 'auth/username',\n      userId: 'auth/userId',\n      requestStatus: 'folder/requestStatus',\n      folderId: 'folder/folderId',\n      folderTitle: 'folder/title',\n      folders: 'auth/folders'\n    })\n  },\n  methods: {\n    getFolderById(folderId) {\n      // http://localhost:8001/api/v1/users/'+folder.userId+'/folders/'+folder.folderId\n      console.log(\"FolderView.vue 85 method get f by id -> \" + folderId);\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/findFolderById', data).then(() => {\n        if (this.requestStatus == 200) {\n          this.$router.push('/dashboard');\n        }\n      });\n    },\n    getAllFoldersByUser() {\n      // send to folder.js actions findFolderById  \n      console.log(\"FolderView.vue 96 method get All\");\n      this.$store.dispatch('folder/findAllFolders', this.userId).then(() => {\n        if (this.requestStatus == 200) {\n          this.$router.push('/');\n        }\n      });\n    },\n    updateFolder(folderId) {\n      console.log(\"FolderView.vue method update -> \" + folderId);\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/updateFolder', data).then(() => {\n        console.log(\"status \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.$router.push('/dashboard');\n        }\n      });\n    },\n    deleteFolder(folderId) {\n      console.log(\"FolderView.vue  method delete -> \" + folderId);\n      var data = {\n        \"folderId\": folderId,\n        \"userId\": this.userId\n      };\n      this.$store.dispatch('folder/deleteFolder', data).then(() => {\n        console.log(\"status \" + this.requestStatus);\n        if (this.requestStatus == 200) {\n          this.$router.push('/dashboard');\n        }\n      });\n    },\n    insertFolder() {\n      const data = {\n        title: this.title,\n        userId: this.userId\n      };\n      // send to folder.js actions insertFolderdata                    \n      this.$store.dispatch('folder/insertFolderData', data).then(() => {\n        if (this.requestStatus == 201) {\n          this.$store.dispatch('folder/findAllFolders', this.userId);\n          this.$router.push('/');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","namespaced","name","data","title","computed","authenticated","username","userId","requestStatus","folderId","folderTitle","folders","methods","getFolderById","console","log","$store","dispatch","then","$router","push","getAllFoldersByUser","updateFolder","deleteFolder","insertFolder"],"sources":["/home/nexoc/JS/frontend/frontend-vue/src/components/FoldersView.vue"],"sourcesContent":["\n\n<template>\n<div class=\"body\">\n    <div id=\"app\" class=\"main\">\n        <img src=\"@/assets/logo.png\" alt=\"\">\n\n        <div id='insertFolder'>\n            <form @submit.prevent=\"insertFolder\">\n                <input type=\"text\" name=\"title\" placeholder=\"your title of new folder\" v-model=\"title\" />\n                <button id='insertFolder'>insert new folder</button>\n            </form>\n        </div>\n\n        <template v-if=\"requestStatus == 201\">\n            <div id='folderInfo'>\n            {{ requestStatus }} <br>\n            {{ folderId }} <br>\n            {{ folderTitle }} <br>\n            </div>                    \n        </template>\n\n        <div id='showFoldersButton'>\n            <form @submit.prevent=\"getAllFoldersByUser\">\n                <button id='showFolders'>show all folders</button>\n            </form>\n        </div>\n\n        <template v-if=\"true\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>title</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"folder in folders\" :key=\"folder.id\">\n                        <td>\n                            <form @submit.prevent=\"getFolderById(folder.folderId)\">\n                                <button id='showFolder'>{{ folder.title }}</button>\n                            </form>\n                        </td>\n                        <td>\n                            <form @submit.prevent=\"updateFolder(folder.folderId)\">\n                                <button id='updateFolder'>Update</button>\n                            </form>\n                        </td>\n                        <td>\n                            <form @submit.prevent=\"deleteFolder(folder.folderId)\">\n                                <button id='deleteFolder'>Delete</button>\n                            </form>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n         </template>      \n    </div>\n  </div>\n  </template>\n  \n  \n  <script>\n    /* eslint-disable */\n    import { mapGetters } from \"vuex\";\n  \n    export default {\n        namespaced: true,\n        name: 'folder',\n\n        data() {\n            return {   \n                title: null,\n                }\n        },\n\n        computed: {  \n            ...mapGetters({\n                    authenticated: 'auth/authenticated',\n                    username: 'auth/username',\n                    userId: 'auth/userId',\n                    requestStatus: 'folder/requestStatus',\n                    folderId: 'folder/folderId',\n                    folderTitle: 'folder/title',\n                    folders: 'auth/folders',\n            })\n        },\n\n        methods: {   \n                getFolderById(folderId) {\n                    // http://localhost:8001/api/v1/users/'+folder.userId+'/folders/'+folder.folderId\n                    console.log(\"FolderView.vue 85 method get f by id -> \" + folderId)   \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/findFolderById', data)                    \n                    .then(() => {                       \n                        if (this.requestStatus == 200) {\n                            this.$router.push('/dashboard') \n                        }\n                    })\n                }, \n\n                getAllFoldersByUser() {\n                    // send to folder.js actions findFolderById  \n                    console.log(\"FolderView.vue 96 method get All\")                 \n                    this.$store.dispatch('folder/findAllFolders', this.userId)\n                    .then(() => {                        \n                        if (this.requestStatus == 200) {\n                            this.$router.push('/') \n                        }\n                    })\n                \n                },  \n                updateFolder(folderId) {\n                    console.log(\"FolderView.vue method update -> \" + folderId) \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }  \n                    this.$store.dispatch('folder/updateFolder', data)                    \n                    .then(() => {    \n                        console.log(\"status \" + this.requestStatus)                      \n                        if (this.requestStatus == 200) {\n                            this.$router.push('/dashboard') \n                        }\n                    })\n                },  \n                deleteFolder(folderId) {\n                    console.log(\"FolderView.vue  method delete -> \" + folderId) \n                    var data = {\n                        \"folderId\": folderId,\n                        \"userId\": this.userId\n                    }\n                    this.$store.dispatch('folder/deleteFolder', data)                    \n                    .then(() => {      \n                        console.log(\"status \" + this.requestStatus)             \n                        if (this.requestStatus == 200) {\n                            this.$router.push('/dashboard') \n                        }\n                    })  \n                },  \n                insertFolder() {\n                    const data = {title: this.title, userId: this.userId}\n                    // send to folder.js actions insertFolderdata                    \n                    this.$store.dispatch('folder/insertFolderData', data)\n                    .then(() => {                        \n                    if (this.requestStatus == 201) {\n                        this.$store.dispatch('folder/findAllFolders', this.userId)\n                        this.$router.push('/') \n                    }\n                    })\n                },                               \n        },\n    }\n      \n</script>\n\n<style>\n    #insertFolder{\n        margin-left: 50px;\n    }\n    #folderInfo{\n        margin-left: 50px;\n    }\n    #showFoldersButton{\n        margin: 50px;\n    }\n    .table{\n        margin: 50px;\n        border: 10px solid red;\n    }\n\n</style>\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}